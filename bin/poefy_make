#!/usr/bin/env ruby
# Encoding: UTF-8

################################################################################
# Determine which database interface to use, based on the gems installed.
# Generate initial corpora.
################################################################################

require_relative '../lib/poefy.rb'

Poefy.console = true

################################################################################

# Determine which database interface to use, based on the gems installed.
# Attempt to load exactly one of the below files.
# Array is ordered by priority, so use PostgreSQL before SQLite.
# (This code shouldn't really be necessary, unless the user has explicitly
#   deleted their settings file.)
def determine_database_interface
  loaded_file = nil
  [
    'poefy/pg',
    'poefy/sqlite3'
  ].each do |file|
    begin
      require_relative file
      loaded_file = File.basename(file)
      break
    rescue LoadError
    end
  end

  # Exit and send error to the console if no file loaded.
  if loaded_file.nil?
    msg = "ERROR: Please specify the type of database to use." +
        "\n       The 'poefy' gem does not implement a database interface" +
        "\n       by default; you must install one of the below gems:" +
        "\n         gem install poefy-sqlite3" +
        "\n         gem install poefy-pg"
    STDERR.puts msg
    exit 1
  end

  loaded_file
end

# If the user already has a database interface setup, then use that.
# If they don't, then determine based off installed gems.
if Poefy.database_type(false).nil?
  Poefy.database_type = determine_database_interface
end

# Should already be setup, but just run this to confirm no error is thrown.
Poefy.require_db

################################################################################

# Create corpora from the text files included with the repository.
# Exclude all lines which do not contain lowercase letters.
def make_db database, textfile, description
  file  = Poefy.root + '/data/' + textfile
  input = File.readlines(file).keep_if { |i| i =~ /[a-z]/ }
  poefy = Poefy::Poem.new database
  poefy.make_database! input, description
  poefy.close
end

[
  [
    'shakespeare',
    'shakespeare_sonnets.txt',
    "Shakespeare's sonnets"
  ],[
    'therese',
    'st_therese_of_lisieux.txt',
    "St. Thérèse of Lisieux"
  ],[
    'whitman',
    'whitman_leaves.txt',
    "Walt Whitman, Leaves of Grass"
  ],[
    'dickinson',
    'emily_dickinson.txt',
    "Emily Dickinson"
  ],[
    'spoke',
    'english_as_she_is_spoke.txt',
    "English As She Is Spoke"
  ]
].each do |i|
  make_db(*i)
end

################################################################################
